#!/usr/bin/env Rscript#
#
# Number of Runs of the Experiment.#
R = 1000#
#
# Sample Size.#
N = 100#
#
# X part of set of samples.#
Xs = NA#
#
# Y part of set of samples.#
Ys = NA#
#
# Weight Vector of Random Target Function.#
wf = NA#
#
# Final Hypothesis.#
g = NA; wg = NA#
#
##
# Fraction of IN-SAMPLE Mismatches#
# g(x) != y per Experiment.#
##
Ein = NA#
#
##
# Fraction of OUT-OF-SAMPLE Mismatches#
# g(x) != f(x) per Experiment.#
##
Eout = NA#
#
random_x = function (void) {#
    x = runif(2, -1, 1)#
}#
#
proper = function (x) {#
    append(1, x)#
}#
#
random_f = function () {#
    a = random_x()#
    b = random_x()#
    wf[1] <<- (a[1] * b[2]) - (b[1] * a[2])#
    wf[2] <<- a[2] - b[2]#
    wf[3] <<- b[1] - a[1]#
#
    function (x) { sign(t(wf) %*% proper(x)) }#
}#
#
getX = function () {#
    X = vector()#
    for (i in 1:N) {#
        X = c(X, proper(unlist(Xs[i])))#
    }#
    X = matrix(X, nrow=N, ncol=3, byrow=TRUE)#
}#
#
getY = function () {#
    Y = vector()#
    for (i in 1:N) {#
        Y = c(Y, unlist(Ys[i]))#
    }#
    Y = matrix(Y, nrow=N, ncol=1, byrow=TRUE)#
}#
#
minw = function (X, Y) {#
    Xdagger = solve(t(X) %*% X) %*% t(X)#
    w = Xdagger %*% Y#
    w = c(w)#
}#
#
create_h = function (w) {#
    function (x) { sign(t(w) %*% proper(x)) }#
}#
#
ein = function () {#
    mismatchN = 0#
#
    for (i in 1:N) {#
        x = unlist(Xs[i])#
        y = unlist(Ys[i])    #
        if (g(x) != y) {#
            mismatchN = mismatchN + 1#
        } #
    }#
#
    avg = mismatchN / N#
}#
#
eout = function () {#
    T = 1000; mismatchN = 0#
#
    for (i in 1:T) {#
        x = random_x()#
        if (g(x) != f(x)) {#
            mismatchN = mismatchN + 1#
        }#
    }#
#
    avg = mismatchN / T#
}#
#
for (i in 1:R) {#
    f   = random_f()#
    Xs  = lapply(1:N, random_x)#
    Ys  = lapply(Xs, f)#
#
    X   = getX()#
    Y   = getY()#
    wg  = minw(X, Y)#
    g   = create_h(wg)#
#
    Ein[i]  = ein()#
    Eout[i] = eout()#
}#
#
print("Linear Regression Classification")#
print(paste("Sample Size     = ", N))#
print(paste("Number of Runs  = ", R))#
print(paste("Mean Ein        = ", mean(Ein)))#
print(paste("Mean Eout       = ", mean(Eout)))#
#
paint = function () {#
    name = "linear_regression.png"#
    png(name)#
#
    plot(0, 0, type="n", xlab="x1", ylab="x2",#
         main="Linear Regression Classification")#
#
    ch = 16; color = 3#
#
    for (i in 1:N) {#
        x = unlist(Xs[i])#
        y = unlist(Ys[i])#
        points(x[1], x[2], pch=(ch + y), col=(color + g(x)))#
    }#
#
    wgcolor = "black"; wfcolor = "dark green"#
    wglty   = 1      ; wflty   = 2#
#
    abline(a=(-wf[1]/wf[3]), b = (-wf[2]/wf[3]),#
           col=wfcolor, lty=wflty, lwd=1)#
#
    abline(a=(-wg[1]/wg[3]), b = (-wg[2]/wg[3]),#
           col=wgcolor, lty=wglty)#
#
    legend("topright", c("f(x)", "g(x)"),#
           col=c(wfcolor, wgcolor),#
           lty=c(wflty, wglty))#
#
    dev.off()#
    browseURL(name)#
}#
#
# Paint the results of the last Experiment.#
paint()
;
.
Ein
x <- 0;
for (i in 1:R) { x <- x + Ein[i]}
x
x <- x/1000;
x - 0
x - 0.001
x- 0.01
x = runif(2, -1, 1);
x
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Downloads/Desktop/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("4vs4 with", "4vs4 without")#
trials_per_setting = 5#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward")#
plt("steps")
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Downloads/Desktop/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("4vs4 with", "4vs4 without", "16vs16 with", "16vs16 without", "32vs32 with", "32vs32 without")#
trials_per_setting = 5#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward")#
plt("steps")
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Downloads/Desktop/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("4vs4 with", "4vs4 without", "16vs16 with", "16vs16 without", "32vs32 with", "32vs32 without")#
trials_per_setting = 5#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward")
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Downloads/Desktop/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("4vs4 with", "4vs4 without", "16vs16 with", "16vs16 without", "32vs32 with", "32vs32 without")#
trials_per_setting = 5#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1) +#
ggtitle(paste0('Starcraft a=', alpha,', l=',lambda))#
}#
plt("reward")
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Downloads/Desktop/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("4vs4 with", "4vs4 without", "16vs16 with", "16vs16 without", "32vs32 with", "32vs32 without")#
trials_per_setting = 5#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1) +#
ggtitle(paste0('Starcraft a=', alpha,', l=',lambda))#
}#
plt("steps")
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documenten/Robrecht/Universiteit/Multi-agent seminar/Taak 4/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base", "Distance", "Hitpoints", "Enemy attacking moving", "Combination")#
trials_per_setting = 10#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)#
plt("steps", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent seminar/Taak 4/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base", "Distance", "Hitpoints", "Enemy attacking moving", "Combination")#
trials_per_setting = 10#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)#
plt("steps", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documenten/Robrecht/Universiteit/Multi-agent seminar/Taak 4/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base", "Distance", "Hitpoints", "Enemy attacking moving", "Combination")#
trials_per_setting = 10#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documenten/Robrecht/Universiteit/Multi-agent seminar/Taak 4/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base", "Distance", "Hitpoints", "Enemy attacking moving", "Combination")#
trials_per_setting = 10#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent seminar/Taak 4/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base", "Distance", "Hitpoints", "Enemy attacking moving", "Combination")#
trials_per_setting = 10#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent seminar/Taak 4/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base", "Distance", "Hitpoints", "Enemy attacking moving", "Combination")#
trials_per_setting = 10#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("steps", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent seminar/Taak 2/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("10vs16", "10vs32", "10vs64", "15vs16", "15vs32", "15vs64", "20vs16", "20vs32", "20vs64")#
trials_per_setting = 10#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent seminar/Taak 2/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("10vs16", "10vs32", "10vs64", "15vs16", "15vs32", "15vs64", "20vs16", "20vs32", "20vs64")#
trials_per_setting = 5#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 2/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("10vs16", "10vs32", "10vs64", "15vs16", "15vs32", "15vs64", "20vs16", "20vs32", "20vs64")#
trials_per_setting = 5#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)#
plt("steps", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)#
plt("steps", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("steps", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta*-1.5) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("rewards", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=(dta*-1,5)) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("rewards", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=(dta*-1.5)) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("rewards", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=(dta+30)) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("rewards", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("rewards", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", FALSE)
dta
dta$reward
dta$reward[0]
dta$reward[1]
dta$reward[2]
dta$reward[100]
for(j in seq(1, trials_per_setting)){ dta$reward[j] = dta$reward[j] + 30; }
dta
for(j in 1:100){ dta$reward[j] = dta$reward[j] + 30; }
dta
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
for(j in 1:100){ dta$reward[j] = dta$reward[j] + 30; }#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
for(j in 1:100){ dta$reward[j] = dta$reward[j] + 50; }#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
for(j in 1:100){ dta$reward[j] = dta$reward[j] + 30; }#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 5/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base")#
trials_per_setting = 1#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
for(j in 1:100){ dta$reward[j] = dta$reward[j] + 10; }#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", FALSE)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.9#
base_folder = "/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Multi-agent learning seminar/Taak 4/"#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Base", "Distance", "Hitpoints", "Enemy attacking moving", "Combination")#
trials_per_setting = 10#
num_episodes = 100#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
for(j in seq(0, trials_per_setting-1)){#
trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
trial_data$episode = c(1:num_episodes)#
trial_data$setting = s#
trial_data$trial = j#
dta = rbind(dta, trial_data)#
}#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string, show_confidence=TRUE){#
ggplot(aes_string(x="episode", y=y_string, color="setting"), data=dta) +#
geom_smooth(size=1.1, se=show_confidence) +#
ggtitle(paste0('Smoothed ',y_string, ', with alpha=', alpha,' and lambda=',lambda))#
}#
plt("reward", TRUE)#
plt("steps", FALSE)
LANGUAGE=EN
LANGUAGE=en
rect(0, 0, 5, 5)
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "", main = "2 x 11 rectangles; 'rect(100+i,300+i,  150+i,380+i)'")
rect(0, 0, 5, 5)
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "", main = "2 x 11 rectangles; 'rect(100+i,300+i,  150+i,380+i)'")
plot(c(0, 10), c(0, 10))
rect(0, 0, 5, 5)
plot(c(0, 10), c(0, 10), type="n")
rect(0, 0, 5, 5)
points(2.5, 2.5)
plot(c(0, 6), c(0, 6), type="n")
rect(0, 0, 5, 5)
plot(c(0, 7), c(0, 7), type="n")
rect(0, 0, 6, 6)
rect(0, 0, 2, 6)
rect(0, 2, 4, 6)
plot(c(0, 7), c(0, 7), type="n")
rect(0, 0, 6, 6)
rect(0, 0, 2, 6)
rect(2, 0, 4, 6)
rect(4, 0, 6, 2)
rect(4, 2, 6, 4)
rect(0, 0, 2, 2)
rect(0, 2, 2, 4)
rect(4, 0, 4.666667, 2)
rect(4.666667, 0, 5.33333, 2)
points(3,3)
points(1,3)#
points(5,3)
points(5,1)#
points(5,5)
points(1,1)#
points(1,5)#
points(4.333333,1)#
points(5.777777,1)
plot(c(0, 7), c(0, 7), type="n")#
rect(0, 0, 6, 6)#
points(3,3)
png('rplot.png')
points(3,3)
plot(c(0, 7), c(0, 7), type="n")#
rect(0, 0, 6, 6)#
points(3,3)
rect(0, 0, 2, 6)#
rect(2, 0, 4, 6)#
points(1,3)#
points(5,3)
plot(c(0, 7), c(0, 7), type="n")#
rect(0, 0, 6, 6)#
points(3,3)
rect(0, 0, 2, 6)#
rect(2, 0, 4, 6)#
points(1,3)#
points(5,3)
rect(4, 0, 6, 2)#
rect(4, 2, 6, 4)#
points(5,1)#
points(5,5)
rect(0, 0, 2, 2)#
rect(0, 2, 2, 4)#
rect(4, 0, 4.666667, 2)#
rect(4.666667, 0, 5.33333, 2)#
points(1,1)#
points(1,5)#
points(4.333333,1)#
points(5.777777,1)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.98#
base_folder = "/Users/robrechtconjaerts/Dropbox/Multi-Agent Learning Seminar/Pre-experiments/TR_Experiments/"#
#D:/Dropbox/vm_shared/Project/#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Resolution1-1", "Resolution16-1", "Resolution16-8", "Resolution32-1")#
trials_per_setting = 15#
num_episodes = 200#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
  for(j in seq(0, trials_per_setting-1)){#
    trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
    trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
    trial_data$episode = c(1:num_episodes)#
    trial_data$potential = s#
    trial_data$trial = j#
    dta = rbind(dta, trial_data)#
  }#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string){#
  ggplot(aes_string(x="episode", y=y_string, color="potential"), data=dta) + #
    geom_smooth(size=1) + #
    ggtitle(paste0('Smoothed average ', y_string, ' over ', trials_per_setting, ' trials [alpha=', alpha, '/lambda=', lambda, ']'))#
}#
plt("reward")#
plt("steps")#
#
stat_dta = dta[dta$episode==199,]#
x = dta[dta$potential=='ensemble_2.5T_0.95D',]#
y = dta[dta$potential=='ensemble_5.0T_0.98D',]#
wilcox.test(x$reward, y$reward)
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.98#
base_folder = "/Users/robrechtconjaerts/Dropbox/Multi-Agent Learning Seminar/Pre-experiments/TR_Experiments/"#
#D:/Dropbox/vm_shared/Project/#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Resolution1-1", "Resolution16-1", "Resolution16-8", "Resolution32-1")#
trials_per_setting = 15#
num_episodes = 200#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
  for(j in seq(0, trials_per_setting-1)){#
    trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
    trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
    trial_data$episode = c(1:num_episodes)#
    trial_data$potential = s#
    trial_data$trial = j#
    dta = rbind(dta, trial_data)#
  }#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string){#
  ggplot(aes_string(x="episode", y=y_string, color="potential"), data=dta) + #
    geom_smooth(size=1) + #
    ggtitle(paste0('Smoothed average ', y_string, ' over ', trials_per_setting, ' trials [alpha=', alpha, '/lambda=', lambda, ']'))#
}#
plt("reward")
library(ggplot2)#
# Define settings#
alpha = 0.4#
lambda = 0.98#
base_folder = "/Users/robrechtconjaerts/Dropbox/Multi-Agent Learning Seminar/Pre-experiments/TR_Experiments/"#
#D:/Dropbox/vm_shared/Project/#
# There have to exist some folders with the EXACT name as in the "settings"#
settings = c("Resolution1-1", "Resolution16-1", "Resolution16-8", "Resolution32-1")#
trials_per_setting = 15#
num_episodes = 200#
# Data collection and aggregation#
dta = data.frame()#
for(s in settings){#
  for(j in seq(0, trials_per_setting-1)){#
    trial_file = paste0(base_folder, s, "/trial", j, "_out.txt", sep="")#
    trial_data = read.csv(trial_file, header=F, col.names=c("episode","reward", "steps"))[1:num_episodes, ]#
    trial_data$episode = c(1:num_episodes)#
    trial_data$potential = s#
    trial_data$trial = j#
    dta = rbind(dta, trial_data)#
  }#
}#
remove(trial_data, s, j)#
# Plotting fun#
plt = function(y_string){#
  ggplot(aes_string(x="episode", y=y_string, color="potential"), data=dta) + #
    geom_smooth(size=1) + #
    ggtitle(paste0('Smoothed average ', y_string, ' over ', trials_per_setting, ' trials [alpha=', alpha, '/lambda=', lambda, ']'))#
}#
plt("steps")
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results/MO-SOO);#
problems <- c("ZDT1");#
algorithms <- c("MO-SOO");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
for(a in algorithms){#
data1 <- read.csv(paste(a, "_", p, ".csv", sep=""),header=FALSE)#
pdf(paste(a, "_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlab="f1", ylab="f2", main=paste("Algorithm ", a, " for problem ", p, sep=""))#
legend("topright", c(a),lty=c(1,1),col="red")#
dev.off()#
}#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results/MO-SOO);#
problems <- c("ZDT1");#
algorithms <- c("MO-SOO");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
for(a in algorithms){#
data1 <- read.csv(paste(a, "_", p, ".csv", sep=""),header=FALSE)#
pdf(paste(a, "_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlab="f1", ylab="f2", main=paste("Algorithm ", a, " for problem ", p, sep=""))#
legend("topright", c(a),lty=c(1,1),col="red")#
dev.off()#
}#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results/MO-SOO/);#
problems <- c("ZDT1");#
algorithms <- c("MO-SOO");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
for(a in algorithms){#
data1 <- read.csv(paste(a, "_", p, ".csv", sep=""),header=FALSE)#
pdf(paste(a, "_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlab="f1", ylab="f2", main=paste("Algorithm ", a, " for problem ", p, sep=""))#
legend("topright", c(a),lty=c(1,1),col="red")#
dev.off()#
}#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results/MO-SOO/);
t
adsfadsfe2rkqwo[ip]er90[-]p1354
;
clear
clear'
c;ear;
.
clear;
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results/MO-SOO/);#
problems <- c("ZDT1");#
algorithms <- c("MO-SOO");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
for(a in algorithms){#
data1 <- read.csv(paste(a, "_", p, ".csv", sep=""),header=FALSE)#
pdf(paste(a, "_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlab="f1", ylab="f2", main=paste("Algorithm ", a, " for problem ", p, sep=""))#
legend("topright", c(a),lty=c(1,1),col="red")#
dev.off()#
}#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results/MO-SOO/);#
problems <- c("ZDT1");#
algorithms <- c("MO-SOO");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
for(a in algorithms){#
data1 <- read.csv(paste(a, "_", p, ".csv", sep=""),header=FALSE)#
pdf(paste(a, "_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlab="f1", ylab="f2", main=paste("Algorithm ", a, " for problem ", p, sep=""))#
legend("topright", c(a),lty=c(1,1),col="red")#
dev.off()#
}#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results/MOSOO/);#
problems <- c("ZDT1");#
algorithms <- c("MOSOO");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
for(a in algorithms){#
data1 <- read.csv(paste(a, "_", p, ".csv", sep=""),header=FALSE)#
pdf(paste(a, "_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlab="f1", ylab="f2", main=paste("Algorithm ", a, " for problem ", p, sep=""))#
legend("topright", c(a),lty=c(1,1),col="red")#
dev.off()#
}#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results/MOSOO);#
problems <- c("ZDT1");#
algorithms <- c("MOSOO");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
for(a in algorithms){#
data1 <- read.csv(paste(a, "_", p, ".csv", sep=""),header=FALSE)#
pdf(paste(a, "_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlab="f1", ylab="f2", main=paste("Algorithm ", a, " for problem ", p, sep=""))#
legend("topright", c(a),lty=c(1,1),col="red")#
dev.off()#
}#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results");#
problems <- c("ZDT1");#
algorithms <- c("MO-SOO");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
for(a in algorithms){#
data1 <- read.csv(paste(a, "_", p, ".csv", sep=""),header=FALSE)#
pdf(paste(a, "_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlab="f1", ylab="f2", main=paste("Algorithm ", a, " for problem ", p, sep=""))#
legend("topright", c(a),lty=c(1,1),col="red")#
dev.off()#
}#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results");#
problems <- c("ZDT1");#
algorithms <- c("MO-SOO", "MOEAD", "SOO");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
for(a in algorithms){#
data1 <- read.csv(paste(a, "_", p, ".csv", sep=""),header=FALSE)#
pdf(paste(a, "_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlab="f1", ylab="f2", main=paste("Algorithm ", a, " for problem ", p, sep=""))#
legend("topright", c(a),lty=c(1,1),col="red")#
dev.off()#
}#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results");#
problems <- c("ZDT1");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
data1 <- read.csv(paste("MOEAD_", p, ".csv", sep=""),header=FALSE)#
data2 <- read.csv(paste("MO-SOO_", p, ".csv", sep=""),header=FALSE)#
pdf(paste("Combi_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlim=c(min(c(colMin(data1[1]),colMin(data2[1]))), max(c(colMax(data1[1]),colMax(data2[1])))), ylim=c(min(c(colMin(data1[2]),colMin(data2[2]))), max(c(colMax(data1[2]),colMax(data2[2])))), xlab="f1", ylab="f2", main=paste("SOO and MOEA/D comparison for problem", p, sep=" "))#
points(data2[,1],data2[,2], col="blue")#
legend("topright", c("MOEA/D","MO-SOO"),lty=c(1,1),col=c("red","blue")) #
dev.off()#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results");#
problems <- c("ZDT2");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
data1 <- read.csv(paste("MOEAD_", p, ".csv", sep=""),header=FALSE)#
data2 <- read.csv(paste("MO-SOO_", p, ".csv", sep=""),header=FALSE)#
pdf(paste("Combi_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlim=c(min(c(colMin(data1[1]),colMin(data2[1]))), max(c(colMax(data1[1]),colMax(data2[1])))), ylim=c(min(c(colMin(data1[2]),colMin(data2[2]))), max(c(colMax(data1[2]),colMax(data2[2])))), xlab="f1", ylab="f2", main=paste("SOO and MOEA/D comparison for problem", p, sep=" "))#
points(data2[,1],data2[,2], col="blue")#
legend("topright", c("MOEA/D","MO-SOO"),lty=c(1,1),col=c("red","blue")) #
dev.off()#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results");#
problems <- c("ZDT3");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
data1 <- read.csv(paste("MOEAD_", p, ".csv", sep=""),header=FALSE)#
data2 <- read.csv(paste("MO-SOO_", p, ".csv", sep=""),header=FALSE)#
pdf(paste("Combi_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlim=c(min(c(colMin(data1[1]),colMin(data2[1]))), max(c(colMax(data1[1]),colMax(data2[1])))), ylim=c(min(c(colMin(data1[2]),colMin(data2[2]))), max(c(colMax(data1[2]),colMax(data2[2])))), xlab="f1", ylab="f2", main=paste("SOO and MOEA/D comparison for problem", p, sep=" "))#
points(data2[,1],data2[,2], col="blue")#
legend("topright", c("MOEA/D","MO-SOO"),lty=c(1,1),col=c("red","blue")) #
dev.off()#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results");#
problems <- c("ZDT6");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
data1 <- read.csv(paste("MOEAD_", p, ".csv", sep=""),header=FALSE)#
data2 <- read.csv(paste("MO-SOO_", p, ".csv", sep=""),header=FALSE)#
pdf(paste("Combi_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlim=c(min(c(colMin(data1[1]),colMin(data2[1]))), max(c(colMax(data1[1]),colMax(data2[1])))), ylim=c(min(c(colMin(data1[2]),colMin(data2[2]))), max(c(colMax(data1[2]),colMax(data2[2])))), xlab="f1", ylab="f2", main=paste("SOO and MOEA/D comparison for problem", p, sep=" "))#
points(data2[,1],data2[,2], col="blue")#
legend("topright", c("MOEA/D","MO-SOO"),lty=c(1,1),col=c("red","blue")) #
dev.off()#
}
setwd("/Users/robrechtconjaerts/Documents/Robrecht/Universiteit/Thesis/Results");#
problems <- c("ZDT6");#
#
colMax <- function(data) sapply(data, max, na.rm = TRUE)#
colMin <- function(data) sapply(data, min, na.rm = TRUE)#
#
for(p in problems){#
data1 <- read.csv(paste("MOEAD_", p, ".csv", sep=""),header=FALSE)#
data2 <- read.csv(paste("MO-SOO_", p, ".csv", sep=""),header=FALSE)#
pdf(paste("Combi_", p,".pdf", sep=""))#
plot(data1[,1],data1[,2], col="red", xlim=c(min(c(colMin(data1[1]),colMin(data2[1]))), max(c(colMax(data1[1]),colMax(data2[1])))), ylim=c(min(c(colMin(data1[2]),colMin(data2[2]))), max(c(colMax(data1[2]),colMax(data2[2])))), xlab="f1", ylab="f2", main=paste("SOO and MOEA/D comparison for problem", p, sep=" "))#
points(data2[,1],data2[,2], col="blue")#
legend("topright", c("MOEA/D","MO-SOO"),lty=c(1,1),col=c("red","blue")) #
dev.off()#
}
